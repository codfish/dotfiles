#!/usr/bin/env zsh

# Test whether a Homebrew formula is already installed
# $1 - formula name (may include options)
formula_exists() {
  if $(brew list $1 &>/dev/null); then
    printf "%s already installed.\n" "$1"
    return 0
  fi

  e_warning "Missing formula: $1"
  return 1
}

# Test whether a Homebrew cask app is already installed
# $1 - formula name (may include options)
cask_exists() {
  if $(brew list --cask $1 &>/dev/null); then
    printf "%s already installed.\n" "$1"
    return 0
  fi

  e_warning "Missing formula: $1"
  return 1
}

brew_tap() {
  if brew tap | grep $1 &> /dev/null
  then
    echo "already tapped - $1"
    false
  else
    e_header "Tapping $1"
    brew tap $1
  fi
}

run_brew() {
  # Check for Homebrew
  if type 'brew' &> /dev/null; then
    # Use the latest version of Homebrew
    e_header "Updating Homebrew..."
    brew update
    [[ $? ]] && e_success "Done"

    # Upgrade any already-installed formulae
    e_header "Updating any existing Homebrew formulae..."
    brew upgrade
    [[ $? ]] && e_success "Done"

    # update or install desired formulae
    e_header "Checking status of desired Homebrew formulae..."

    # ** array items can include options for package **
    local -a desired_formulae=(
      'ack'
      'adr-tools'
      'awscli'
      'coreutils' # GNU core utilities (those that come with macOS are outdated)
      'deno'
      'git'
      'go'
      'heroku/brew/heroku'
      'jq'
      'kubectl'
      'blendle/blendle/kns'
      'kubectx'
      'mysql'
      'nginx'
      'nvm'
      'php'
      'pure'
      'python'
      'pyenv'
      'rbenv'
      'rsync'
      'tmux'
      'wget'
    )

    for index in ${desired_formulae[@]}
    do
      if ! formula_exists $index; then
        brew install $index
      fi
    done

    # Cleanup brew
    e_header "Cleaning brew..."
    brew cleanup -s
    [[ $? ]] && e_success "Done"
  else
    printf "\n"
    e_error "Error: Homebrew not found."
    printf "Aborting...\n"
    exit
  fi
}

run_brew_cask() {
  if type 'brew' &> /dev/null; then
    # update or install desired formulae
    e_header "Checking status of desired Homebrew casks..."

    local -a desired_apps=(
      'alfred'
      'appcleaner'
      'brave-browser'
      'cloudapp'
      'google-chrome'
      'google-cloud-sdk'
      'google-drive'
      'iterm2'
      'notion'
      'postman'
      'slack'
      'spotify'
      'visual-studio-code'
      'zoom'
    )

    for app in ${desired_apps[@]}
    do
      if ! cask_exists $app; then
        brew install --cask $app
      fi
    done
  else
    printf "\n"
    e_error "Error: Homebrew not found."
    printf "Aborting...\n"
    exit
  fi
}
